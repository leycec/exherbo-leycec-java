# Copyright 2010 Cecil Curry <leycec@gmail.com>
# Distributed under the terms of the GNU General Public License v2

require junit [ archive_jar_file="${PNV}-src.jar" ]

# JUnit 4.x.x is backwards incompatible with JUnit 3.x.x. Why maintain the
# JUnit 3.x.x series? High-profile exheres (like Eclipse) require both.
SLOT="4"
PLATFORMS="~amd64 ~x86"
MYOPTIONS="doc examples"

# JUnit 4.x.x adds a dependency on Hamcrest. 
DEPENDENCIES="
    build+run:
        dev-java/hamcrest:1[>=1.2]
"

# Numerous patches correcting compatibility with Hamcrest 1.2 are thanks to the
# MacPorts "port" for JUnit 4.6 at "http://trac.macports.org/changeset/52233".
#
# You guys are legends!
DEFAULT_SRC_PREPARE_PATCHES=(
    "${FILES}/${SLOT}/build_xml-fix.patch"
    "${FILES}/${SLOT}/org_junit_internal_matchers-deprecate.patch"
)

# Declare this prior to declaring "ANT_PARAMS" below.
JAVA_SRC_LIBRARY_DIR="lib"
JAVA_SRC_PREPARE_JARS=( "hamcrest:1 hamcrest-core" )

# JUnit needs to be hand-held, a bit; explicitly tell it where hamcrest lives.
ANT_PARAMS+=(
    -Ddist="${JUNIT_DIST_DIR}"
    -Dhamcrestlib="${JAVA_SRC_LIBRARY_DIR}/hamcrest-core.jar"
)

ANT_SRC_COMPILE_PARAMS=( build )
ANT_SRC_INSTALL_PARAMS=( jars )

# JUnit creates various jar files, of which we ignore all except the
# "${PN}-dep-${PV}.jar" jar file having no external dependencies.
JAVA_SRC_INSTALL_JARS=( "${JUNIT_DIST_DIR}/${PN}-dep-${PV}.jar" )

DEFAULT_SRC_INSTALL_EXTRA_DOCS=( "doc/ReleaseNotes${PV}.txt" )

src_install() {
    antefix_src_install

    # Restructure the JUnit documentation tree so as to place all HTML
    # documentation under a new "/usr/share/doc/${PN}/html/" path.
    if option doc; then
        local junit_document_dir="${WORK}/doc/"
        local junit_javadoc_dir="${WORK}/javadoc/"

        # First, remove all non-HTML documents.
        edo rm "${junit_document_dir}"/*.{sh,txt}

        # Next, install all HTML documents.
        docinto html
        dodoc "${junit_document_dir}"/*
        docinto html/javadoc
        dodoc "${junit_javadoc_dir}"/*
    fi

    if option examples; then
        docinto examples
        dodoc "${WORK}/org/junit/samples"/*
    fi
}


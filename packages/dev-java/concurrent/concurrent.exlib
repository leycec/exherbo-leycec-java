# Copyright 2010 Cecil Curry <leycec@gmail.com>
# Distributed under the terms of the GNU General Public License v2

require antefix
export_exlib_phases src_unpack

BUGS_TO="leycec@gmail.com"

SUMMARY="Java libraries for standardized, efficient concurrency."
DESCRIPTION="
Concurrent provides standardized, efficient versions of utility classes commonly
encountered in concurrent Java programming. It consists of implementations of
ideas that have been around for ages, and is merely intended to save you the
trouble of coding them. 
"

HOMEPAGE="http://gee.cs.oswego.edu/dl/classes/EDU/oswego/cs/dl/util/${PN}/intro.html"
MY_DOWNLOADS_HOME="http://repository.jboss.com/oswego-${PN}/1.3.4.patch01-brew/src"
DOWNLOADS="
${MY_DOWNLOADS_HOME}/${PNV}-src.tar.gz
${MY_DOWNLOADS_HOME}/${PNV}.build.xml
"

SLOT="1"
LICENCES="as-is"

WORK="${WORKBASE}/${PN}"

ANT_PARAMS=( -Dversion=${PV} )

# Do not call the "compile" task, as that causes recompilation when calling the
# "jar" task. (Go straight for the throat.)
ANT_SRC_CONFIGURE_PARAMS=( init )
ANT_SRC_COMPILE_PARAMS=( jar )
JAVA_SRC_INSTALL_JARS=( "${PNV}.jar" )

concurrent_src_unpack() {
    antefix_src_unpack

    # Remove undesirable paths.
    edo rm -rf "${WORK}/taskDemo"

    # Move all unpacked sources under a top-level "src/" directory.
    local temp_src_dir="${TEMP}/src"
    edo mkdir -p "${temp_src_dir}"
    edo mv "${WORK}"/* "${temp_src_dir}"
    edo mv "${temp_src_dir}" "${WORK}"/

    # Copy the fetched "build.xml" file.
    edo cp "${FETCHEDDIR}/${PNV}.build.xml" "${WORK}/build.xml"
}


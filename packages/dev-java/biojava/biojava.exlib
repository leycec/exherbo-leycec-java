# Copyright 2010 Cecil Curry <leycec@gmail.com>
# Distributed under the terms of the GNU General Public License v2

# ....................{ EXLIB                              }....................
require antefix
export_exlib_phases src_prepare

# Exheres slot, passed as an exparam so as to be available in global scope.
myexparam slot=
  exparam -v SLOT slot

# Download program name and version corresponding to the second most deeply
# nested subdirectory of the DOWNLOADS URI (e.g., "bg16" for BioJava 1.6.1).
myexparam download_pnv=
  exparam -v MY_DOWNLOAD_PNV download_pnv

# Download type corresponding to the most deeply nested subdirectory of the
# DOWNLOADS URI (e.g., "all" for BioJava 1.6, "src" for BioJava 1.7).
myexparam download_type=
  exparam -v MY_DOWNLOAD_TYPE download_type

# Exheres work subdirectory.
myexparam work="${PNV}-${MY_DOWNLOAD_TYPE}"
WORK="${WORKBASE}/$(exparam work)"

# ....................{ EXHERES                            }....................
BUGS_TO="leycec@gmail.com"

SUMMARY="Java framework for processing biological data"
DESCRIPTION="
BioJava is a Java framework for processing biological data. It provides
analytical and statistical routines, parsers for common file formats and allows
the manipulation of sequences and 3D structures. The goal of the biojava project
is to facilitate rapid application development for bioinformatics. 
"

HOMEPAGE="http://${PN}.org"
DOWNLOADS="${HOMEPAGE}/download/${MY_DOWNLOAD_PNV}/${MY_DOWNLOAD_TYPE}/${PNV}-${MY_DOWNLOAD_TYPE}.jar"
UPSTREAM_DOCUMENTATION="${HOMEPAGE}/docs/api${MY_PV_COMPACT} [[ lang = en ]]"

LICENCES="LGPL-2.1"
DEPENDENCIES="
    build+run:
        dev-java/biojava-bytecode[>=${PV}]
        dev-java/commons-cli:1
        dev-java/commons-dbcp:1
        dev-java/commons-pool:1
        dev-java/commons-collections:3
        dev-java/jgrapht:0
    build+test:
        dev-java/junit:4
"

#FIXME: Tests need network sandbox whitelisting, but I can't be bothered at the
#fickle moment.
# Build the core BioJava API, but not standalone BioJava applications. (Not all
# BioJava slots have the applications available.)
ANT_SRC_CONFIGURE_PARAMS=( prepare-biojava )
ANT_SRC_COMPILE_PARAMS=( compile-biojava )
ANT_SRC_TEST_PARAMS=( runtests )
ANT_SRC_INSTALL_PARAMS=( package-biojava )
JAVA_SRC_INSTALL_JARS=( "ant-build/${PN}.jar" )

biojava_src_prepare() {
    antefix_src_prepare

    # BioJava's "build.xml" hardcodes an unfriendly classpath. Replace it with a
    # classpath having absolute paths to all JAR dependencies.
    local biojava_jar_dependency biojava_jar_dependencies biojava_classpath
    biojava_jar_dependencies=(
         "biojava-bytecode:1"
         "commons-cli:1"
         "commons-dbcp:1"
         "commons-pool:1"
         "commons-collections:3"
         "jgrapht:0"
         "junit:4"
    )
    for biojava_jar_dependency in "${biojava_jar_dependencies[@]}"; do
        biojava_classpath+=':'$(which_installed_jar_file "${biojava_jar_dependency}")
    done

    edo sed -e 's~"bytecode\.jar.*$~"'"${biojava_classpath}"'"/>~' \
            -i "${ANT_BUILD_XML}"
}

